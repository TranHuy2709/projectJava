/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import SQL.DataProvider;
import dao.SQLdata;
import java.awt.Toolkit;
import java.io.File;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import model.BoMon;
import model.ChuongTrinhHoc;
import model.GiangVien;
import model.Khoa;
import model.Lop;
import model.MonHoc;
import model.SinhVien;

public class GiaoDienChinh extends javax.swing.JFrame {

    boolean dangNhap = false;
    GiangVien gvOnline;
    SinhVien svOnline;
    private List<Lop> lstLop= SQLdata.getSQLdata().getLstLop();
    private List<SinhVien> lstSV= SQLdata.getSQLdata().getLstSV();
    private List<MonHoc> lstMonHoc= SQLdata.getSQLdata().getLstMonHoc();
    private List<GiangVien> lstGV= SQLdata.getSQLdata().getLstGV();
    private List<ChuongTrinhHoc> lstCTH= SQLdata.getSQLdata().getLstCTH();
    private List<MonHoc> daDK;
    List<String> list1= new ArrayList<>();
    DefaultTableModel modelDSSV, modelChuongTrinhHoc, modelDangKiHoc, modelTraCuuDiem;
    Connection conn= DataProvider.get().connect(); //ket noi sql sever
    PreparedStatement ps= null;  //biến để thực thi câu lệnh query
    ResultSet rs= null; //biến trả về kqua

    public GiaoDienChinh() {
        initComponents();
        Toolkit tk = Toolkit.getDefaultToolkit();
        int xsize = (int) tk.getScreenSize().getWidth();
        int ysize = (int) tk.getScreenSize().getHeight();
        this.setSize(xsize, ysize);
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jMenuBar3 = new javax.swing.JMenuBar();
        jMenu5 = new javax.swing.JMenu();
        jMenu6 = new javax.swing.JMenu();
        jMenu7 = new javax.swing.JMenu();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jDialog1 = new javax.swing.JDialog();
        jFrame1 = new javax.swing.JFrame();
        paneDangNhap = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtTenDangNhap = new javax.swing.JTextField();
        btnHuy = new javax.swing.JButton();
        btnDangNhap = new javax.swing.JButton();
        pfPassWord = new javax.swing.JPasswordField();
        paneSV = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        tpSV = new javax.swing.JTabbedPane();
        paneDangKiHoc = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbDangKiHoc = new javax.swing.JTable();
        btnDangKiHoc = new javax.swing.JButton();
        paneTraCuuDiem = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbTraCuuDiem = new javax.swing.JTable();
        paneChuongTrinhHoc = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tbChuongTrinhHoc = new javax.swing.JTable();
        paneThongTInSV = new javax.swing.JPanel();
        paneGV = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        cbbTenKhoa = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        cbbTenLop = new javax.swing.JComboBox<>();
        txtTimKiemSV = new javax.swing.JTextField();
        btnTimKiem = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbDSSV = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        jTabbedPane2.addTab("tab1", jTabbedPane3);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jMenu3.setText("File");
        jMenuBar2.add(jMenu3);

        jMenu4.setText("Edit");
        jMenuBar2.add(jMenu4);

        jMenu5.setText("File");
        jMenuBar3.add(jMenu5);

        jMenu6.setText("Edit");
        jMenuBar3.add(jMenu6);

        jMenu7.setText("jMenu7");

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Phần mềm quản lý sinh viên");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        paneDangNhap.setBackground(new java.awt.Color(255, 255, 255));
        paneDangNhap.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin đăng nhập hệ thống", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(0, 0, 0))); // NOI18N

        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Tài khoản:");

        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Mật khẩu:");

        btnHuy.setText("Hủy bỏ");

        btnDangNhap.setText("Đăng nhập");
        btnDangNhap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDangNhapActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout paneDangNhapLayout = new javax.swing.GroupLayout(paneDangNhap);
        paneDangNhap.setLayout(paneDangNhapLayout);
        paneDangNhapLayout.setHorizontalGroup(
            paneDangNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneDangNhapLayout.createSequentialGroup()
                .addGap(147, 147, 147)
                .addGroup(paneDangNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(paneDangNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(paneDangNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtTenDangNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(pfPassWord, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(paneDangNhapLayout.createSequentialGroup()
                        .addComponent(btnDangNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnHuy, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        paneDangNhapLayout.setVerticalGroup(
            paneDangNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneDangNhapLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(paneDangNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTenDangNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(paneDangNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pfPassWord, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(paneDangNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnHuy, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDangNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        paneSV.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("HỆ THỐNG THÔNG TIN TRƯỜNG ĐẠI HỌC");

        paneDangKiHoc.setBackground(new java.awt.Color(255, 255, 255));

        tbDangKiHoc.setBackground(new java.awt.Color(255, 255, 255));
        tbDangKiHoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã môn học", "Tên môn học", "Số tín chỉ", "Đăng ký"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tbDangKiHoc);
        if (tbDangKiHoc.getColumnModel().getColumnCount() > 0) {
            tbDangKiHoc.getColumnModel().getColumn(0).setPreferredWidth(100);
            tbDangKiHoc.getColumnModel().getColumn(1).setPreferredWidth(300);
            tbDangKiHoc.getColumnModel().getColumn(2).setPreferredWidth(100);
            tbDangKiHoc.getColumnModel().getColumn(3).setPreferredWidth(100);
        }

        btnDangKiHoc.setText("Đăng kí học");

        javax.swing.GroupLayout paneDangKiHocLayout = new javax.swing.GroupLayout(paneDangKiHoc);
        paneDangKiHoc.setLayout(paneDangKiHocLayout);
        paneDangKiHocLayout.setHorizontalGroup(
            paneDangKiHocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 1016, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paneDangKiHocLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnDangKiHoc, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(110, 110, 110))
        );
        paneDangKiHocLayout.setVerticalGroup(
            paneDangKiHocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneDangKiHocLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnDangKiHoc, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(81, Short.MAX_VALUE))
        );

        tpSV.addTab("Đăng kí học", paneDangKiHoc);

        paneTraCuuDiem.setBackground(new java.awt.Color(255, 255, 255));

        tbTraCuuDiem.setBackground(new java.awt.Color(255, 255, 255));
        tbTraCuuDiem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Mã môn học", "Tên môn học", "Số tín chỉ", "Điểm quá trình", "Điểm thi", "Điểm tổng kết"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Float.class, java.lang.Object.class, java.lang.Float.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tbTraCuuDiem);
        if (tbTraCuuDiem.getColumnModel().getColumnCount() > 0) {
            tbTraCuuDiem.getColumnModel().getColumn(0).setPreferredWidth(100);
            tbTraCuuDiem.getColumnModel().getColumn(1).setPreferredWidth(300);
            tbTraCuuDiem.getColumnModel().getColumn(2).setResizable(false);
            tbTraCuuDiem.getColumnModel().getColumn(2).setPreferredWidth(100);
            tbTraCuuDiem.getColumnModel().getColumn(3).setPreferredWidth(100);
            tbTraCuuDiem.getColumnModel().getColumn(4).setPreferredWidth(100);
            tbTraCuuDiem.getColumnModel().getColumn(5).setPreferredWidth(100);
        }

        javax.swing.GroupLayout paneTraCuuDiemLayout = new javax.swing.GroupLayout(paneTraCuuDiem);
        paneTraCuuDiem.setLayout(paneTraCuuDiemLayout);
        paneTraCuuDiemLayout.setHorizontalGroup(
            paneTraCuuDiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 1016, Short.MAX_VALUE)
        );
        paneTraCuuDiemLayout.setVerticalGroup(
            paneTraCuuDiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneTraCuuDiemLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 475, Short.MAX_VALUE)
                .addContainerGap())
        );

        tpSV.addTab("Tra cứu điểm", paneTraCuuDiem);

        paneChuongTrinhHoc.setBackground(new java.awt.Color(255, 255, 255));

        tbChuongTrinhHoc.setBackground(new java.awt.Color(255, 255, 255));
        tbChuongTrinhHoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã môn học", "Tên môn học", "Số tín chỉ", "Học kì"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane5.setViewportView(tbChuongTrinhHoc);
        if (tbChuongTrinhHoc.getColumnModel().getColumnCount() > 0) {
            tbChuongTrinhHoc.getColumnModel().getColumn(0).setPreferredWidth(100);
            tbChuongTrinhHoc.getColumnModel().getColumn(1).setPreferredWidth(300);
            tbChuongTrinhHoc.getColumnModel().getColumn(2).setPreferredWidth(100);
            tbChuongTrinhHoc.getColumnModel().getColumn(3).setPreferredWidth(100);
        }

        javax.swing.GroupLayout paneChuongTrinhHocLayout = new javax.swing.GroupLayout(paneChuongTrinhHoc);
        paneChuongTrinhHoc.setLayout(paneChuongTrinhHocLayout);
        paneChuongTrinhHocLayout.setHorizontalGroup(
            paneChuongTrinhHocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paneChuongTrinhHocLayout.createSequentialGroup()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 1010, Short.MAX_VALUE)
                .addContainerGap())
        );
        paneChuongTrinhHocLayout.setVerticalGroup(
            paneChuongTrinhHocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 487, Short.MAX_VALUE)
        );

        tpSV.addTab("Chương trình học", paneChuongTrinhHoc);

        paneThongTInSV.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout paneThongTInSVLayout = new javax.swing.GroupLayout(paneThongTInSV);
        paneThongTInSV.setLayout(paneThongTInSVLayout);
        paneThongTInSVLayout.setHorizontalGroup(
            paneThongTInSVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1016, Short.MAX_VALUE)
        );
        paneThongTInSVLayout.setVerticalGroup(
            paneThongTInSVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 487, Short.MAX_VALUE)
        );

        tpSV.addTab("Thông tin cá nhân", paneThongTInSV);

        javax.swing.GroupLayout paneSVLayout = new javax.swing.GroupLayout(paneSV);
        paneSV.setLayout(paneSVLayout);
        paneSVLayout.setHorizontalGroup(
            paneSVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneSVLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(tpSV, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        paneSVLayout.setVerticalGroup(
            paneSVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneSVLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tpSV))
        );

        paneGV.setBackground(new java.awt.Color(255, 255, 255));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("HỆ THỐNG THÔNG TIN TRƯỜNG ĐẠI HỌC");

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        cbbTenKhoa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chọn khoa" }));
        cbbTenKhoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbTenKhoaActionPerformed(evt);
            }
        });

        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Tìm kiếm sinh viên:");

        cbbTenLop.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chọn lớp" }));
        cbbTenLop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbTenLopActionPerformed(evt);
            }
        });

        txtTimKiemSV.setForeground(new java.awt.Color(204, 204, 204));
        txtTimKiemSV.setText("Nhập mã sinh viên");
        txtTimKiemSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimKiemSVActionPerformed(evt);
            }
        });

        btnTimKiem.setText("Tìm kiếm");

        tbDSSV.setBackground(new java.awt.Color(255, 255, 255));
        tbDSSV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã sinh viên", "Họ tên", "Giới tính", "Ngày sinh", "Tên lớp", "Email", "Điểm trung bình"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tbDSSV);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(cbbTenKhoa, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cbbTenLop, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(148, 148, 148)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTimKiemSV, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbbTenKhoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbbTenLop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTimKiemSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTimKiem))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 411, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Danh sách sinh viên", jPanel2);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1016, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 467, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Nhập điểm", jPanel3);

        javax.swing.GroupLayout paneGVLayout = new javax.swing.GroupLayout(paneGV);
        paneGV.setLayout(paneGVLayout);
        paneGVLayout.setHorizontalGroup(
            paneGVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneGVLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jTabbedPane1)
        );
        paneGVLayout.setVerticalGroup(
            paneGVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneGVLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jTabbedPane1))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(paneDangNhap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(paneSV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(paneGV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(paneDangNhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(paneSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(paneGV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        paneDangNhap.setVisible(true);
        paneSV.setVisible(false);
        paneGV.setVisible(false);
    }//GEN-LAST:event_formWindowOpened

    private void btnDangNhapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDangNhapActionPerformed
        if (txtTenDangNhap.getText().equals("") || pfPassWord.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Vui lòng nhập đầy đủ thông tin.");
            return;
        }
        if(txtTenDangNhap.getText().contains("GV")){
            for(GiangVien gv: lstGV){
                if(gv.getMaGV().equals(txtTenDangNhap.getText())){
                     JOptionPane.showMessageDialog(rootPane, "Đăng nhập thành công");
                     gvOnline=gv;
                     dangNhap=true;
                     break;
                }
            }
        }else if(txtTenDangNhap.getText().contains("SV")){
            for(SinhVien sv: lstSV){
                if(sv.getMaSV().equals(txtTenDangNhap.getText())){
                    JOptionPane.showMessageDialog(rootPane, "Đăng nhập thành công");
                    svOnline=sv;
                    dangNhap=true;
                    if(!SQLdata.getSQLdata().ktraTableMonHocSV(svOnline)){
                    SQLdata.getSQLdata().createTableMonHocSV(svOnline);
                    }
                    break;
                }
            }
        }else{
            JOptionPane.showMessageDialog(rootPane, "Sai tên tài khoản hoặc mật khẩu.");
            return;
        }
        if (dangNhap == true && svOnline!=null) {
            paneDangNhap.setVisible(false);
            paneSV.setVisible(true);
            khoiTaoBangSV();
            getChuongTrinhHoc();
            hienThiTCD();
        } else if (dangNhap == true && gvOnline!=null) {
            paneGV.setVisible(true);
            khoiTaoBangGV();
            addItemCbbKhoa();
        }
    }//GEN-LAST:event_btnDangNhapActionPerformed

    private void txtTimKiemSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimKiemSVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTimKiemSVActionPerformed

    private void cbbTenKhoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbTenKhoaActionPerformed
        
    }//GEN-LAST:event_cbbTenKhoaActionPerformed

    private void cbbTenLopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbTenLopActionPerformed
    }//GEN-LAST:event_cbbTenLopActionPerformed

    private void addItemCbbKhoa() {
    }

    private void hienThiDSSV(List<String> lst) {
        for (String s : lst) {
            String[] arr = s.split(",");
            modelDSSV.addRow(arr);
        }
    }

    private void xoaBang(DefaultTableModel model) {
        for (int i = model.getRowCount()-1; i >= 0; i--) {
            model.removeRow(i);
        }
    }
    
    private void xoaItemCbbLop(){
        for(int i=cbbTenLop.getItemCount()-1; i>0; i--){
            cbbTenLop.removeItemAt(i);
        }
    }
    
    private void khoiTaoBangSV(){
        //set tiêu đề các cột của bảng ra giữa
        DefaultTableCellRenderer renderer1 = (DefaultTableCellRenderer) tbChuongTrinhHoc.getTableHeader().getDefaultRenderer();
        renderer1.setHorizontalAlignment(0);
        DefaultTableCellRenderer renderer2 = (DefaultTableCellRenderer) tbTraCuuDiem.getTableHeader().getDefaultRenderer();
        renderer2.setHorizontalAlignment(0);
        DefaultTableCellRenderer renderer3 = (DefaultTableCellRenderer) tbDangKiHoc.getTableHeader().getDefaultRenderer();
        renderer3.setHorizontalAlignment(0);
        //set giá trị các cell trong cột ra giữa
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(SwingConstants.CENTER);
        tbChuongTrinhHoc.getColumnModel().getColumn(2).setCellRenderer(centerRenderer);
        tbChuongTrinhHoc.getColumnModel().getColumn(3).setCellRenderer(centerRenderer);
        
        //add vào model
        modelChuongTrinhHoc= (DefaultTableModel) tbChuongTrinhHoc.getModel();
        modelDangKiHoc= (DefaultTableModel) tbDangKiHoc.getModel();
        modelTraCuuDiem= (DefaultTableModel) tbTraCuuDiem.getModel();
    }
    
    private void khoiTaoBangGV(){
        modelDSSV= (DefaultTableModel) tbDSSV.getModel();
    }
    
    private void getChuongTrinhHoc(){
        lstLop= SQLdata.getSQLdata().getLstLop();
        ChuongTrinhHoc cth;
        for(Lop lop: lstLop){
            if(svOnline.getIdLop().equals(lop.getIdLop())){
                for(ChuongTrinhHoc cth2: lstCTH){
                    if(cth2.getIdCHT().equals(lop.getIdChuongTrinhHoc())){
                        svOnline.setCht(cth2);
                    }
                }
            }
        }
        List<MonHoc> DSMH= setCTHSinhVien(svOnline);
        for(MonHoc mh: DSMH){
            String[] rows= new String[4];
            rows[0]= mh.getIdMonHoc();
            rows[1]= mh.getTenMonHoc();
            rows[2]= mh.getSoTinChi()+ "";
            rows[3]= mh.getHocKi()+"";
            modelChuongTrinhHoc.addRow(rows);
        }
    }
    
    private List<MonHoc> setCTHSinhVien(SinhVien sv){
         List<MonHoc> hienThiCTH= new ArrayList<>();
         for(MonHoc mh: lstMonHoc){
             if(mh.getIdMonHoc().equals(sv.getCht().getIdMonHoc1())){
                 hienThiCTH.add(mh);
                 break;
             }
         }
         for(MonHoc mh: lstMonHoc){
             if(mh.getIdMonHoc().equals(sv.getCht().getIdMonHoc2())){
                 hienThiCTH.add(mh);
                 break;
             }
         }
         for(MonHoc mh: lstMonHoc){
             if(mh.getIdMonHoc().equals(sv.getCht().getIdMonHoc3())){
                 hienThiCTH.add(mh);
                 break;
             }
         }
         for(MonHoc mh: lstMonHoc){
             if(mh.getIdMonHoc().equals(sv.getCht().getIdMonHoc4())){
                 hienThiCTH.add(mh);
                 break;
             }
         }
         for(MonHoc mh: lstMonHoc){
             if(mh.getIdMonHoc().equals(sv.getCht().getIdMonHoc5())){
                 hienThiCTH.add(mh);
                 break;
             }
         }
         for(MonHoc mh: lstMonHoc){
             if(mh.getIdMonHoc().equals(sv.getCht().getIdMonHoc6())){
                 hienThiCTH.add(mh);
                 break;
             }
         }
         for(MonHoc mh: lstMonHoc){
             if(mh.getIdMonHoc().equals(sv.getCht().getIdMonHoc7())){
                 hienThiCTH.add(mh);
                 break;
             }
         }
         for(MonHoc mh: lstMonHoc){
             if(mh.getIdMonHoc().equals(sv.getCht().getIdMonHoc8())){
                 hienThiCTH.add(mh);
                 break;
             }
         }
         for(MonHoc mh: lstMonHoc){
             if(mh.getIdMonHoc().equals(sv.getCht().getIdMonHoc9())){
                 hienThiCTH.add(mh);
                 break;
             }
         }
         for(MonHoc mh: lstMonHoc){
             if(mh.getIdMonHoc().equals(sv.getCht().getIdMonHoc10())){
                 hienThiCTH.add(mh);
                 break;
             }
         }
         for(MonHoc mh: lstMonHoc){
             if(mh.getIdMonHoc().equals(sv.getCht().getIdMonHoc11())){
                 hienThiCTH.add(mh);
                 break;
             }
         }
         for(MonHoc mh: lstMonHoc){
             if(mh.getIdMonHoc().equals(sv.getCht().getIdMonHoc12())){
                 hienThiCTH.add(mh);
                 break;
             }
         }
         for(MonHoc mh: lstMonHoc){
             if(mh.getIdMonHoc().equals(sv.getCht().getIdMonHoc13())){
                 hienThiCTH.add(mh);
                 break;
             }
         }
         for(MonHoc mh: lstMonHoc){
             if(mh.getIdMonHoc().equals(sv.getCht().getIdMonHoc14())){
                 hienThiCTH.add(mh);
                 break;
             }
         }
         for(MonHoc mh: lstMonHoc){
             if(mh.getIdMonHoc().equals(sv.getCht().getIdMonHoc15())){
                 hienThiCTH.add(mh);
                 break;
             }
         }
         for(MonHoc mh: lstMonHoc){
             if(mh.getIdMonHoc().equals(sv.getCht().getIdMonHoc16())){
                 hienThiCTH.add(mh);
                 break;
             }
         }
         for(MonHoc mh: lstMonHoc){
             if(mh.getIdMonHoc().equals(sv.getCht().getIdMonHoc17())){
                 hienThiCTH.add(mh);
                 break;
             }
         }
         for(MonHoc mh: lstMonHoc){
             if(mh.getIdMonHoc().equals(sv.getCht().getIdMonHoc18())){
                 hienThiCTH.add(mh);
                 break;
             }
         }
         for(MonHoc mh: lstMonHoc){
             if(mh.getIdMonHoc().equals(sv.getCht().getIdMonHoc19())){
                 hienThiCTH.add(mh);
                 break;
             }
         }
         for(MonHoc mh: lstMonHoc){
             if(mh.getIdMonHoc().equals(sv.getCht().getIdMonHoc20())){
                 hienThiCTH.add(mh);
                 break;
             }
         }
         for(MonHoc mh: lstMonHoc){
             if(mh.getIdMonHoc().equals(sv.getCht().getIdDoAn())){
                 hienThiCTH.add(mh);
                 break;
             }
         }
         return hienThiCTH;
     }   
    
    private void hienThiDKH(SinhVien sv){
        
    }
    
    private void hienThiTCD(){
        SinhVien sv= svOnline;
        for(MonHoc mh:  SQLdata.getSQLdata().getLstMHSV(sv)){
            String[] rows= new String[6];
            rows[0]= mh.getIdMonHoc();
            rows[1]= mh.getTenMonHoc();
            rows[2]= mh.getSoTinChi()+"";
            rows[3]= mh.getDiemQuaTrinh()+"";
            rows[4]= mh.getDiemThi()+"";
            float diemThi= (float)(mh.getDiemQuaTrinh()*0.3+ mh.getDiemThi()*0.7);
            rows[5]= diemThi+ "";
            
            modelTraCuuDiem.addRow(rows);
        }
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GiaoDienChinh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GiaoDienChinh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GiaoDienChinh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GiaoDienChinh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GiaoDienChinh().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDangKiHoc;
    private javax.swing.JButton btnDangNhap;
    private javax.swing.JButton btnHuy;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JComboBox<String> cbbTenKhoa;
    private javax.swing.JComboBox<String> cbbTenLop;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JList<String> jList1;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuBar jMenuBar3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JPanel paneChuongTrinhHoc;
    private javax.swing.JPanel paneDangKiHoc;
    private javax.swing.JPanel paneDangNhap;
    private javax.swing.JPanel paneGV;
    private javax.swing.JPanel paneSV;
    private javax.swing.JPanel paneThongTInSV;
    private javax.swing.JPanel paneTraCuuDiem;
    private javax.swing.JPasswordField pfPassWord;
    private javax.swing.JTable tbChuongTrinhHoc;
    private javax.swing.JTable tbDSSV;
    private javax.swing.JTable tbDangKiHoc;
    private javax.swing.JTable tbTraCuuDiem;
    private javax.swing.JTabbedPane tpSV;
    private javax.swing.JTextField txtTenDangNhap;
    private javax.swing.JTextField txtTimKiemSV;
    // End of variables declaration//GEN-END:variables
}
